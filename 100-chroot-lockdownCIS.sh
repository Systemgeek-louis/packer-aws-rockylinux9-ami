################################################################################
################################################################################
################################################################################
#!/bin/bash
#set -euo pipefail
IFS=$'\n\t'

ROOTFS=/rootfs
DEVICE="/dev/nvme1n1"
LVM="/dev/mapper"

arch="$( uname --machine )"

################################################################################
# lockdown with CIS
echo "[>> Install ansible"

dnf --installroot="${ROOTFS}" --nogpgcheck -y config-manager --set-enabled powertools
dnf --installroot="${ROOTFS}" --nogpgcheck -y install epel-release
dnf --installroot="${ROOTFS}" --nogpgcheck -y install ansible-core
set -u
dnf --installroot="${ROOTFS}" -C -y remove firewalld --setopt="clean_requirements_on_remove=1"

#echo "[>> Lets get the Lockdown repo"
#dnf -y install git
#git clone https://github.com/ansible-lockdown/RHEL9-CIS.git "${ROOTFS}"/root/RHEL9-CIS

echo "[>> Fix resolv.conf"
cat > "${ROOTFS}"/etc/resolv.conf << EOF
# Generated by NetworkManager
search transitionaldata.com
nameserver 10.102.74.21
nameserver 10.102.90.21
EOF

#echo "[>> Install Ansible addon modules"
#chroot "${ROOTFS}" ansible-galaxy collection install community.general
#chroot "${ROOTFS}" ansible-galaxy collection install community.crypto
#chroot "${ROOTFS}" ansible-galaxy collection install ansible.posix
#chroot "${ROOTFS}" ansible-galaxy collection install community.general

#echo "[>> Setup chroot inventory for ansible"
#cat > "${ROOTFS}"/root/RHEL8-CIS/hosts << EOF
#127.0.0.1 ansible_connection=local

#[chroots]
#${ROOTFS} ansible_connection=chroot

#EOF
#echo "[>> Run ansible"
#ansible-playbook -c chroot -i chroot "${ROOTFS}"/root/RHEL9-CIS/site.yml --tags=\"level2_server\""

#chroot "${ROOTFS}" /usr/bin/ansible-playbook \
#  --connection=local \
#  --inventory 127.0.0.1, \
#  --limit 127.0.0.1 /root/RHEL9-CIS/site.yml \
#  -i ansible_hosts \
#  --tags="level2_server"
